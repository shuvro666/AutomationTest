// ------------------------------------------------------------------------------
//  <auto-generated>
//      Dieser Code wurde vom codierten UI-Testbuilder generiert.
//      Version: 11.0.0.0
//
//      In dieser Datei sind spezialisierte Klassen definiert, die in einem
//      codierten UI-Test verwendet werden.
//      In dieser Datei können die erforderlichen Anpassungen vorgenommen werden.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace StartAndStopTriggerAcquisition
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - Verwenden Sie "RecordedMethod1Params", um Parameter an diese Methode zu übergeben.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinButton uIProbeControllerButton = this.UISOPATStartupWindow.UIProbeControllerWindow.UIProbeControllerButton;
            WinMenuItem uIConnectDisconnectMenuItem = this.UIProbeControlWindow.UIMenuStrip1MenuBar.UIActionsMenuItem.UIConnectDisconnectMenuItem;
            WinTabPage uITriggeringTabPage = this.UIProbeControlWindow.UITabControl1Window.UICurrentpositionTabList.UITriggeringTabPage;
            WinEdit uITextNumberOfTriggersEdit = this.UIProbeControlWindow.UIItem1Window.UITextNumberOfTriggersEdit;
            WinEdit uITextFramesPerTriggerEdit = this.UIProbeControlWindow.UIItem1Window1.UITextFramesPerTriggerEdit;
            WinMenuItem uIStartStopTriggerAcquMenuItem = this.UIProbeControlWindow.UIMenuStrip1MenuBar.UIActionsMenuItem.UIStartStopTriggerAcquMenuItem;
            WinButton uICloseButton = this.UIEmulatedEMU0Window.UIEmulatedEMU0TitleBar.UICloseButton;
            WinButton uICloseButton1 = this.UIProbeControlWindow.UIProbeControlTitleBar.UICloseButton;
            WinButton uICloseButton2 = this.UISOPATStartupWindow.UISOPATStartupTitleBar.UICloseButton;
            #endregion

            // "%ProgramW6432%\SOPAT GmbH\Dashboard\bin\startup\SOPAT_Startup.exe" starten
            ApplicationUnderTest uISOPATStartupWindow = ApplicationUnderTest.Launch(this.RecordedMethod1Params.UISOPATStartupWindowExePath, this.RecordedMethod1Params.UISOPATStartupWindowAlternateExePath);

            // Klicken "Probe Controller" Schaltfläche
            Mouse.Click(uIProbeControllerButton, new Point(51, 10));

            // Klicken "Actions" -> "Connect/Disconnect..." Menüelement
            Mouse.Click(uIConnectDisconnectMenuItem, new Point(41, 4));

            // Klicken "Triggering" Registerkarte
            Mouse.Click(uITriggeringTabPage, new Point(24, 12));

            // "10" in "textNumberOfTriggers" Textfeld eingeben
            uITextNumberOfTriggersEdit.Text = this.RecordedMethod1Params.UITextNumberOfTriggersEditText;

            // "{Enter}" in "textNumberOfTriggers" Textfeld eingeben
            Keyboard.SendKeys(uITextNumberOfTriggersEdit, this.RecordedMethod1Params.UITextNumberOfTriggersEditSendKeys, ModifierKeys.None);

            // "5" in "textFramesPerTrigger" Textfeld eingeben
            uITextFramesPerTriggerEdit.Text = this.RecordedMethod1Params.UITextFramesPerTriggerEditText;

            // "{Enter}" in "textFramesPerTrigger" Textfeld eingeben
            Keyboard.SendKeys(uITextFramesPerTriggerEdit, this.RecordedMethod1Params.UITextFramesPerTriggerEditSendKeys, ModifierKeys.None);

            // Klicken "Actions" -> "Start/Stop Trigger Acquisition..." Menüelement
            Mouse.Click(uIStartStopTriggerAcquMenuItem, new Point(61, 9));

            // Klicken "Actions" -> "Start/Stop Trigger Acquisition..." Menüelement
            Mouse.Click(uIStartStopTriggerAcquMenuItem, new Point(64, 7));

            // Klicken "Close" Schaltfläche
            Mouse.Click(uICloseButton, new Point(18, 11));

            // Klicken "Close" Schaltfläche
            Mouse.Click(uICloseButton1, new Point(26, 16));

            // Klicken "Close" Schaltfläche
            Mouse.Click(uICloseButton2, new Point(20, 15));
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public UISOPATStartupWindow UISOPATStartupWindow
        {
            get
            {
                if ((this.mUISOPATStartupWindow == null))
                {
                    this.mUISOPATStartupWindow = new UISOPATStartupWindow();
                }
                return this.mUISOPATStartupWindow;
            }
        }
        
        public UIProbeControlWindow UIProbeControlWindow
        {
            get
            {
                if ((this.mUIProbeControlWindow == null))
                {
                    this.mUIProbeControlWindow = new UIProbeControlWindow();
                }
                return this.mUIProbeControlWindow;
            }
        }
        
        public UIEmulatedEMU0Window UIEmulatedEMU0Window
        {
            get
            {
                if ((this.mUIEmulatedEMU0Window == null))
                {
                    this.mUIEmulatedEMU0Window = new UIEmulatedEMU0Window();
                }
                return this.mUIEmulatedEMU0Window;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private UISOPATStartupWindow mUISOPATStartupWindow;
        
        private UIProbeControlWindow mUIProbeControlWindow;
        
        private UIEmulatedEMU0Window mUIEmulatedEMU0Window;
        #endregion
    }
    
    /// <summary>
    /// An "RecordedMethod1" zu übergebende Parameter
    /// </summary>
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// "%ProgramW6432%\SOPAT GmbH\Dashboard\bin\startup\SOPAT_Startup.exe" starten
        /// </summary>
        public string UISOPATStartupWindowExePath = "C:\\Program Files\\SOPAT GmbH\\Dashboard\\bin\\startup\\SOPAT_Startup.exe";
        
        /// <summary>
        /// "%ProgramW6432%\SOPAT GmbH\Dashboard\bin\startup\SOPAT_Startup.exe" starten
        /// </summary>
        public string UISOPATStartupWindowAlternateExePath = "%ProgramW6432%\\SOPAT GmbH\\Dashboard\\bin\\startup\\SOPAT_Startup.exe";
        
        /// <summary>
        /// "10" in "textNumberOfTriggers" Textfeld eingeben
        /// </summary>
        public string UITextNumberOfTriggersEditText = "10";
        
        /// <summary>
        /// "{Enter}" in "textNumberOfTriggers" Textfeld eingeben
        /// </summary>
        public string UITextNumberOfTriggersEditSendKeys = "{Enter}";
        
        /// <summary>
        /// "5" in "textFramesPerTrigger" Textfeld eingeben
        /// </summary>
        public string UITextFramesPerTriggerEditText = "5";
        
        /// <summary>
        /// "{Enter}" in "textFramesPerTrigger" Textfeld eingeben
        /// </summary>
        public string UITextFramesPerTriggerEditSendKeys = "{Enter}";
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UISOPATStartupWindow : WinWindow
    {
        
        public UISOPATStartupWindow()
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.Name] = "SOPAT - Startup";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("SOPAT - Startup");
            #endregion
        }
        
        #region Properties
        public UIProbeControllerWindow UIProbeControllerWindow
        {
            get
            {
                if ((this.mUIProbeControllerWindow == null))
                {
                    this.mUIProbeControllerWindow = new UIProbeControllerWindow(this);
                }
                return this.mUIProbeControllerWindow;
            }
        }
        
        public UISOPATStartupTitleBar UISOPATStartupTitleBar
        {
            get
            {
                if ((this.mUISOPATStartupTitleBar == null))
                {
                    this.mUISOPATStartupTitleBar = new UISOPATStartupTitleBar(this);
                }
                return this.mUISOPATStartupTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIProbeControllerWindow mUIProbeControllerWindow;
        
        private UISOPATStartupTitleBar mUISOPATStartupTitleBar;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIProbeControllerWindow : WinWindow
    {
        
        public UIProbeControllerWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "buttonProbeViewer";
            this.WindowTitles.Add("SOPAT - Startup");
            #endregion
        }
        
        #region Properties
        public WinButton UIProbeControllerButton
        {
            get
            {
                if ((this.mUIProbeControllerButton == null))
                {
                    this.mUIProbeControllerButton = new WinButton(this);
                    #region Suchkriterien
                    this.mUIProbeControllerButton.SearchProperties[WinButton.PropertyNames.Name] = "Probe Controller";
                    this.mUIProbeControllerButton.WindowTitles.Add("SOPAT - Startup");
                    #endregion
                }
                return this.mUIProbeControllerButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIProbeControllerButton;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UISOPATStartupTitleBar : WinTitleBar
    {
        
        public UISOPATStartupTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.WindowTitles.Add("SOPAT - Startup");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Suchkriterien
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("SOPAT - Startup");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIProbeControlWindow : WinWindow
    {
        
        public UIProbeControlWindow()
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.Name] = "ProbeControl";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("ProbeControl");
            #endregion
        }
        
        #region Properties
        public UIMenuStrip1MenuBar UIMenuStrip1MenuBar
        {
            get
            {
                if ((this.mUIMenuStrip1MenuBar == null))
                {
                    this.mUIMenuStrip1MenuBar = new UIMenuStrip1MenuBar(this);
                }
                return this.mUIMenuStrip1MenuBar;
            }
        }
        
        public UITabControl1Window UITabControl1Window
        {
            get
            {
                if ((this.mUITabControl1Window == null))
                {
                    this.mUITabControl1Window = new UITabControl1Window(this);
                }
                return this.mUITabControl1Window;
            }
        }
        
        public UIItem1Window UIItem1Window
        {
            get
            {
                if ((this.mUIItem1Window == null))
                {
                    this.mUIItem1Window = new UIItem1Window(this);
                }
                return this.mUIItem1Window;
            }
        }
        
        public UIItem1Window1 UIItem1Window1
        {
            get
            {
                if ((this.mUIItem1Window1 == null))
                {
                    this.mUIItem1Window1 = new UIItem1Window1(this);
                }
                return this.mUIItem1Window1;
            }
        }
        
        public UIProbeControlTitleBar UIProbeControlTitleBar
        {
            get
            {
                if ((this.mUIProbeControlTitleBar == null))
                {
                    this.mUIProbeControlTitleBar = new UIProbeControlTitleBar(this);
                }
                return this.mUIProbeControlTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMenuStrip1MenuBar mUIMenuStrip1MenuBar;
        
        private UITabControl1Window mUITabControl1Window;
        
        private UIItem1Window mUIItem1Window;
        
        private UIItem1Window1 mUIItem1Window1;
        
        private UIProbeControlTitleBar mUIProbeControlTitleBar;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIMenuStrip1MenuBar : WinMenuBar
    {
        
        public UIMenuStrip1MenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinMenu.PropertyNames.Name] = "menuStrip1";
            this.WindowTitles.Add("ProbeControl");
            #endregion
        }
        
        #region Properties
        public UIActionsMenuItem UIActionsMenuItem
        {
            get
            {
                if ((this.mUIActionsMenuItem == null))
                {
                    this.mUIActionsMenuItem = new UIActionsMenuItem(this);
                }
                return this.mUIActionsMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIActionsMenuItem mUIActionsMenuItem;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIActionsMenuItem : WinMenuItem
    {
        
        public UIActionsMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "Actions";
            this.WindowTitles.Add("ProbeControl");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIConnectDisconnectMenuItem
        {
            get
            {
                if ((this.mUIConnectDisconnectMenuItem == null))
                {
                    this.mUIConnectDisconnectMenuItem = new WinMenuItem(this);
                    #region Suchkriterien
                    this.mUIConnectDisconnectMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Connect/Disconnect...";
                    this.mUIConnectDisconnectMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIConnectDisconnectMenuItem.WindowTitles.Add("ProbeControl");
                    #endregion
                }
                return this.mUIConnectDisconnectMenuItem;
            }
        }
        
        public WinMenuItem UIStartStopTriggerAcquMenuItem
        {
            get
            {
                if ((this.mUIStartStopTriggerAcquMenuItem == null))
                {
                    this.mUIStartStopTriggerAcquMenuItem = new WinMenuItem(this);
                    #region Suchkriterien
                    this.mUIStartStopTriggerAcquMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Start/Stop Trigger Acquisition...";
                    this.mUIStartStopTriggerAcquMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIStartStopTriggerAcquMenuItem.WindowTitles.Add("ProbeControl");
                    #endregion
                }
                return this.mUIStartStopTriggerAcquMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIConnectDisconnectMenuItem;
        
        private WinMenuItem mUIStartStopTriggerAcquMenuItem;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UITabControl1Window : WinWindow
    {
        
        public UITabControl1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "tabControl1";
            this.WindowTitles.Add("ProbeControl");
            #endregion
        }
        
        #region Properties
        public UICurrentpositionTabList UICurrentpositionTabList
        {
            get
            {
                if ((this.mUICurrentpositionTabList == null))
                {
                    this.mUICurrentpositionTabList = new UICurrentpositionTabList(this);
                }
                return this.mUICurrentpositionTabList;
            }
        }
        #endregion
        
        #region Fields
        private UICurrentpositionTabList mUICurrentpositionTabList;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UICurrentpositionTabList : WinTabList
    {
        
        public UICurrentpositionTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinTabList.PropertyNames.Name] = "Current position";
            this.WindowTitles.Add("ProbeControl");
            #endregion
        }
        
        #region Properties
        public WinTabPage UITriggeringTabPage
        {
            get
            {
                if ((this.mUITriggeringTabPage == null))
                {
                    this.mUITriggeringTabPage = new WinTabPage(this);
                    #region Suchkriterien
                    this.mUITriggeringTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Triggering";
                    this.mUITriggeringTabPage.WindowTitles.Add("ProbeControl");
                    #endregion
                }
                return this.mUITriggeringTabPage;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mUITriggeringTabPage;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIItem1Window : WinWindow
    {
        
        public UIItem1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textNumberOfTriggers";
            this.WindowTitles.Add("ProbeControl");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextNumberOfTriggersEdit
        {
            get
            {
                if ((this.mUITextNumberOfTriggersEdit == null))
                {
                    this.mUITextNumberOfTriggersEdit = new WinEdit(this);
                    #region Suchkriterien
                    this.mUITextNumberOfTriggersEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Frames per trigger [-]";
                    this.mUITextNumberOfTriggersEdit.WindowTitles.Add("ProbeControl");
                    #endregion
                }
                return this.mUITextNumberOfTriggersEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextNumberOfTriggersEdit;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIItem1Window1 : WinWindow
    {
        
        public UIItem1Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textFramesPerTrigger";
            this.WindowTitles.Add("ProbeControl");
            #endregion
        }
        
        #region Properties
        public WinEdit UITextFramesPerTriggerEdit
        {
            get
            {
                if ((this.mUITextFramesPerTriggerEdit == null))
                {
                    this.mUITextFramesPerTriggerEdit = new WinEdit(this);
                    #region Suchkriterien
                    this.mUITextFramesPerTriggerEdit.WindowTitles.Add("ProbeControl");
                    #endregion
                }
                return this.mUITextFramesPerTriggerEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextFramesPerTriggerEdit;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIProbeControlTitleBar : WinTitleBar
    {
        
        public UIProbeControlTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.WindowTitles.Add("ProbeControl");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Suchkriterien
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("ProbeControl");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIEmulatedEMU0Window : WinWindow
    {
        
        public UIEmulatedEMU0Window()
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Emulated - EMU-0";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Emulated - EMU-0");
            #endregion
        }
        
        #region Properties
        public UIEmulatedEMU0TitleBar UIEmulatedEMU0TitleBar
        {
            get
            {
                if ((this.mUIEmulatedEMU0TitleBar == null))
                {
                    this.mUIEmulatedEMU0TitleBar = new UIEmulatedEMU0TitleBar(this);
                }
                return this.mUIEmulatedEMU0TitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIEmulatedEMU0TitleBar mUIEmulatedEMU0TitleBar;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIEmulatedEMU0TitleBar : WinTitleBar
    {
        
        public UIEmulatedEMU0TitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.WindowTitles.Add("Emulated - EMU-0");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Suchkriterien
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Emulated - EMU-0");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
}
