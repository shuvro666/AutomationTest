// ------------------------------------------------------------------------------
//  <auto-generated>
//      Dieser Code wurde vom codierten UI-Testbuilder generiert.
//      Version: 11.0.0.0
//
//      In dieser Datei sind spezialisierte Klassen definiert, die in einem
//      codierten UI-Test verwendet werden.
//      In dieser Datei können die erforderlichen Anpassungen vorgenommen werden.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace ArrangeOfMultipleSnapShot
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// ArrangeOfMultipleSnapShot - Verwenden Sie "ArrangeOfMultipleSnapShotParams", um Parameter an diese Methode zu übergeben.
        /// </summary>
        public void ArrangeOfMultipleSnapShot()
        {
            #region Variable Declarations
            WinButton uIProbeControllerButton = this.UISOPATStartupWindow.UIProbeControllerWindow.UIProbeControllerButton;
           
            WinMenuItem uIConnectDisconnectMenuItem = this.UIProbeControlWindow.UIMenuStrip1MenuBar.UIActionsMenuItem.UIConnectDisconnectMenuItem;
           
            WinMenuItem uISaveSnapshotMenuItem = this.UIProbeControlWindow.UIMenuStrip1MenuBar.UIActionsMenuItem.UISaveSnapshotMenuItem;
           
            WinMenuItem uIArrangewindowsMenuItem = this.UIProbeControlWindow.UIMenuStrip1MenuBar.UIViewMenuItem.UIArrangewindowsMenuItem;
            #endregion
                       // "%ProgramW6432%\SOPAT GmbH\Dashboard\bin\startup\SOPAT_Startup.exe" starten
            ApplicationUnderTest uISOPATStartupWindow = ApplicationUnderTest.Launch(this.ArrangeOfMultipleSnapShotParams.UISOPATStartupWindowExePath, this.ArrangeOfMultipleSnapShotParams.UISOPATStartupWindowAlternateExePath);
            Playback.Wait(3000);
            // Klicken "Probe Controller" Schaltfläche
            Mouse.Click(uIProbeControllerButton, new Point(54, 8));
            Playback.Wait(3000);
            // Klicken "Actions" -> "Connect/Disconnect..." Menüelement
            Mouse.Click(uIConnectDisconnectMenuItem, new Point(37, 5));
            Playback.Wait(3000);
            // Klicken "Actions" -> "Save Snapshot" Menüelement
            Mouse.Click(uISaveSnapshotMenuItem, new Point(31, 14));
            Playback.Wait(2000);
            // Klicken "Actions" -> "Save Snapshot" Menüelement
            Mouse.Click(uISaveSnapshotMenuItem, new Point(37, 12));
            Playback.Wait(2000);
            // Klicken "Actions" -> "Save Snapshot" Menüelement
            Mouse.Click(uISaveSnapshotMenuItem, new Point(37, 7));
            Playback.Wait(2000);
            // Klicken "Actions" -> "Save Snapshot" Menüelement
            Mouse.Click(uISaveSnapshotMenuItem, new Point(42, 14));
            Playback.Wait(2000);
            // Klicken "View" -> "Arrange windows" Menüelement
            Mouse.Click(uIArrangewindowsMenuItem, new Point(35, 7));
            Playback.Wait(5000);
        }
        
        #region Properties
        public virtual ArrangeOfMultipleSnapShotParams ArrangeOfMultipleSnapShotParams
        {
            get
            {
                if ((this.mArrangeOfMultipleSnapShotParams == null))
                {
                    this.mArrangeOfMultipleSnapShotParams = new ArrangeOfMultipleSnapShotParams();
                }
                return this.mArrangeOfMultipleSnapShotParams;
            }
        }
        
        public UISOPATStartupWindow UISOPATStartupWindow
        {
            get
            {
                if ((this.mUISOPATStartupWindow == null))
                {
                    this.mUISOPATStartupWindow = new UISOPATStartupWindow();
                }
                return this.mUISOPATStartupWindow;
            }
        }
        
        public UIProbeControlWindow UIProbeControlWindow
        {
            get
            {
                if ((this.mUIProbeControlWindow == null))
                {
                    this.mUIProbeControlWindow = new UIProbeControlWindow();
                }
                return this.mUIProbeControlWindow;
            }
        }
        #endregion
        
        #region Fields
        private ArrangeOfMultipleSnapShotParams mArrangeOfMultipleSnapShotParams;
        
        private UISOPATStartupWindow mUISOPATStartupWindow;
        
        private UIProbeControlWindow mUIProbeControlWindow;
        #endregion
    }
    
    /// <summary>
    /// An "ArrangeOfMultipleSnapShot" zu übergebende Parameter
    /// </summary>
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class ArrangeOfMultipleSnapShotParams
    {
        
        #region Fields
        /// <summary>
        /// "%ProgramW6432%\SOPAT GmbH\Dashboard\bin\startup\SOPAT_Startup.exe" starten
        /// </summary>
        public string UISOPATStartupWindowExePath = "C:\\Program Files\\SOPAT GmbH\\Dashboard\\bin\\startup\\SOPAT_Startup.exe";
        
        /// <summary>
        /// "%ProgramW6432%\SOPAT GmbH\Dashboard\bin\startup\SOPAT_Startup.exe" starten
        /// </summary>
        public string UISOPATStartupWindowAlternateExePath = "%ProgramW6432%\\SOPAT GmbH\\Dashboard\\bin\\startup\\SOPAT_Startup.exe";
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UISOPATStartupWindow : WinWindow
    {
        
        public UISOPATStartupWindow()
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.Name] = "SOPAT - Startup";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("SOPAT - Startup");
            #endregion
        }
        
        #region Properties
        public UIProbeControllerWindow UIProbeControllerWindow
        {
            get
            {
                if ((this.mUIProbeControllerWindow == null))
                {
                    this.mUIProbeControllerWindow = new UIProbeControllerWindow(this);
                }
                return this.mUIProbeControllerWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIProbeControllerWindow mUIProbeControllerWindow;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIProbeControllerWindow : WinWindow
    {
        
        public UIProbeControllerWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "buttonProbeViewer";
            this.WindowTitles.Add("SOPAT - Startup");
            #endregion
        }
        
        #region Properties
        public WinButton UIProbeControllerButton
        {
            get
            {
                if ((this.mUIProbeControllerButton == null))
                {
                    this.mUIProbeControllerButton = new WinButton(this);
                    #region Suchkriterien
                    this.mUIProbeControllerButton.SearchProperties[WinButton.PropertyNames.Name] = "Probe Controller";
                    this.mUIProbeControllerButton.WindowTitles.Add("SOPAT - Startup");
                    #endregion
                }
                return this.mUIProbeControllerButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIProbeControllerButton;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIProbeControlWindow : WinWindow
    {
        
        public UIProbeControlWindow()
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.Name] = "ProbeControl";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("ProbeControl");
            #endregion
        }
        
        #region Properties
        public UIMenuStrip1MenuBar UIMenuStrip1MenuBar
        {
            get
            {
                if ((this.mUIMenuStrip1MenuBar == null))
                {
                    this.mUIMenuStrip1MenuBar = new UIMenuStrip1MenuBar(this);
                }
                return this.mUIMenuStrip1MenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIMenuStrip1MenuBar mUIMenuStrip1MenuBar;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIMenuStrip1MenuBar : WinMenuBar
    {
        
        public UIMenuStrip1MenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinMenu.PropertyNames.Name] = "menuStrip1";
            this.WindowTitles.Add("ProbeControl");
            #endregion
        }
        
        #region Properties
        public UIActionsMenuItem UIActionsMenuItem
        {
            get
            {
                if ((this.mUIActionsMenuItem == null))
                {
                    this.mUIActionsMenuItem = new UIActionsMenuItem(this);
                }
                return this.mUIActionsMenuItem;
            }
        }
        
        public UIViewMenuItem UIViewMenuItem
        {
            get
            {
                if ((this.mUIViewMenuItem == null))
                {
                    this.mUIViewMenuItem = new UIViewMenuItem(this);
                }
                return this.mUIViewMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIActionsMenuItem mUIActionsMenuItem;
        
        private UIViewMenuItem mUIViewMenuItem;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIActionsMenuItem : WinMenuItem
    {
        
        public UIActionsMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "Actions";
            this.WindowTitles.Add("ProbeControl");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIConnectDisconnectMenuItem
        {
            get
            {
                if ((this.mUIConnectDisconnectMenuItem == null))
                {
                    this.mUIConnectDisconnectMenuItem = new WinMenuItem(this);
                    #region Suchkriterien
                    this.mUIConnectDisconnectMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Connect/Disconnect...";
                    this.mUIConnectDisconnectMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIConnectDisconnectMenuItem.WindowTitles.Add("ProbeControl");
                    #endregion
                }
                return this.mUIConnectDisconnectMenuItem;
            }
        }
        
        public WinMenuItem UISaveSnapshotMenuItem
        {
            get
            {
                if ((this.mUISaveSnapshotMenuItem == null))
                {
                    this.mUISaveSnapshotMenuItem = new WinMenuItem(this);
                    #region Suchkriterien
                    this.mUISaveSnapshotMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Save Snapshot";
                    this.mUISaveSnapshotMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUISaveSnapshotMenuItem.WindowTitles.Add("ProbeControl");
                    #endregion
                }
                return this.mUISaveSnapshotMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIConnectDisconnectMenuItem;
        
        private WinMenuItem mUISaveSnapshotMenuItem;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIViewMenuItem : WinMenuItem
    {
        
        public UIViewMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "View";
            this.WindowTitles.Add("ProbeControl");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIArrangewindowsMenuItem
        {
            get
            {
                if ((this.mUIArrangewindowsMenuItem == null))
                {
                    this.mUIArrangewindowsMenuItem = new WinMenuItem(this);
                    #region Suchkriterien
                    this.mUIArrangewindowsMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Arrange windows";
                    this.mUIArrangewindowsMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIArrangewindowsMenuItem.WindowTitles.Add("ProbeControl");
                    #endregion
                }
                return this.mUIArrangewindowsMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIArrangewindowsMenuItem;
        #endregion
    }
}
