// ------------------------------------------------------------------------------
//  <auto-generated>
//      Dieser Code wurde vom codierten UI-Testbuilder generiert.
//      Version: 11.0.0.0
//
//      In dieser Datei sind spezialisierte Klassen definiert, die in einem
//      codierten UI-Test verwendet werden.
//      In dieser Datei können die erforderlichen Anpassungen vorgenommen werden.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace ViewCalibrationData
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - Verwenden Sie "RecordedMethod1Params", um Parameter an diese Methode zu übergeben.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinButton uIProbeControllerButton = this.UISOPATStartupWindow.UIProbeControllerWindow.UIProbeControllerButton;
            WinButton uIToolStripButtonConneButton = this.UIProbeControlWindow.UIToolStrip1Window.UIToolStripButtonConneButton;
            WinTabPage uIProbeControlTabPage = this.UIProbeControlWindow.UITabControl1Window.UICurrentpositionTabList.UIProbeControlTabPage;
            WinButton uISetupButton = this.UIProbeControlWindow.UISetupWindow.UISetupButton;
            WinButton uISetupcalibrationdataButton = this.UIFocusmotorsetupWindow.UISetupcalibrationdataWindow.UISetupcalibrationdataButton;
            WinButton uILoadButton = this.UICalibrationdataWindow.UILoadWindow.UILoadButton;
            WinEdit uINameEdit = this.UIOpenWindow.UIItemWindow.UIItem20161115_NEW_BarListItem.UINameEdit;
            
            WinTreeItem uISOPATGmbHpinnedTreeItem = this.UIOpenWindow.UITreeViewWindow.UIQuickaccessTreeItem.UISOPATGmbHpinnedTreeItem;
            WinEdit uINameEdit1 = this.UIOpenWindow.UIItemWindow1.UIMonitoringProgramsListItem.UINameEdit;
            WinEdit uINameEdit2 = this.UIOpenWindow.UIItemWindow2.UICamcontrolListItem.UINameEdit;
            WinEdit uINameEdit3 = this.UIOpenWindow.UIItemWindow3.UICalibrationListItem.UINameEdit;
            WinEdit uINameEdit4 = this.UIOpenWindow.UIItemWindow4.UIItem20161115_NEW_BarListItem.UINameEdit;
            
            WinButton uIOpenButton = this.UIOpenWindow.UIOpenWindow1.UIOpenButton;
            WinButton uIOKButton = this.UICalibrationdataWindow.UIOKWindow.UIOKButton;
            WinButton uIOKButton1 = this.UIFocusmotorsetupWindow.UIOKWindow.UIOKButton;
            WinMenuItem uICalibrationdataMenuItem = this.UIProbeControlWindow.UIMenuStrip1MenuBar.UIViewMenuItem.UICalibrationdataMenuItem;
            WinButton uICloseButton = this.UICalibrationdataWindow.UICalibrationDataTitleBar.UICloseButton;
            WinButton uICloseButton1 = this.UIProbeControlWindow.UIProbeControlTitleBar.UICloseButton;
            WinButton uICloseButton2 = this.UISOPATStartupWindow.UISOPATStartupTitleBar.UICloseButton;
            #endregion

            // "%ProgramW6432%\SOPAT GmbH\Dashboard\bin\startup\SOPAT_Startup.exe" starten
            ApplicationUnderTest uISOPATStartupWindow = ApplicationUnderTest.Launch(this.RecordedMethod1Params.UISOPATStartupWindowExePath, this.RecordedMethod1Params.UISOPATStartupWindowAlternateExePath);

            // Klicken "Probe Controller" Schaltfläche
            Mouse.Click(uIProbeControllerButton, new Point(76, 12));

            // Klicken "toolStripButtonConnect" Schaltfläche
            Mouse.Click(uIToolStripButtonConneButton, new Point(7, 4));

            // Klicken "Probe Control" Registerkarte
            Mouse.Click(uIProbeControlTabPage, new Point(31, 6));

            // Klicken "Setup" Schaltfläche
            Mouse.Click(uISetupButton, new Point(16, 15));

            // Klicken "Setup calibration data" Schaltfläche
            Mouse.Click(uISetupcalibrationdataButton, new Point(138, 20));

            // Klicken "Load" Schaltfläche
            Mouse.Click(uILoadButton, new Point(87, 10));

            // Klicken "Name" Textfeld
            Mouse.Click(uINameEdit, new Point(46, 10));

            // Doppelklicken "Quick access" -> "SOPAT GmbH (pinned)" Strukturelement
            Mouse.DoubleClick(uISOPATGmbHpinnedTreeItem, new Point(27, 9));

            // Doppelklicken "Name" Textfeld
            Mouse.DoubleClick(uINameEdit1, new Point(43, 10));

            // Doppelklicken "Name" Textfeld
            Mouse.DoubleClick(uINameEdit2, new Point(29, 10));

            // Doppelklicken "Name" Textfeld
            Mouse.DoubleClick(uINameEdit3, new Point(29, 11));

            // Klicken "Name" Textfeld
            Mouse.Click(uINameEdit4, new Point(52, 12));

            // Klicken "&Open" Schaltfläche
            Mouse.Click(uIOpenButton, new Point(44, 13));

            // Klicken "OK" Schaltfläche
            Mouse.Click(uIOKButton, new Point(79, 16));

            // Klicken "OK" Schaltfläche
            Mouse.Click(uIOKButton1, new Point(54, 11));

            // Klicken "View" -> "Calibration data" Menüelement
            Mouse.Click(uICalibrationdataMenuItem, new Point(51, 12));

            // Klicken "Close" Schaltfläche
            Mouse.Click(uICloseButton, new Point(37, 16));

            // Klicken "Close" Schaltfläche
            Mouse.Click(uICloseButton1, new Point(24, 15));

            // Klicken "Close" Schaltfläche
            Mouse.Click(uICloseButton2, new Point(26, 23));
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public UISOPATStartupWindow UISOPATStartupWindow
        {
            get
            {
                if ((this.mUISOPATStartupWindow == null))
                {
                    this.mUISOPATStartupWindow = new UISOPATStartupWindow();
                }
                return this.mUISOPATStartupWindow;
            }
        }
        
        public UIProbeControlWindow UIProbeControlWindow
        {
            get
            {
                if ((this.mUIProbeControlWindow == null))
                {
                    this.mUIProbeControlWindow = new UIProbeControlWindow();
                }
                return this.mUIProbeControlWindow;
            }
        }
        
        public UIFocusmotorsetupWindow UIFocusmotorsetupWindow
        {
            get
            {
                if ((this.mUIFocusmotorsetupWindow == null))
                {
                    this.mUIFocusmotorsetupWindow = new UIFocusmotorsetupWindow();
                }
                return this.mUIFocusmotorsetupWindow;
            }
        }
        
        public UICalibrationdataWindow UICalibrationdataWindow
        {
            get
            {
                if ((this.mUICalibrationdataWindow == null))
                {
                    this.mUICalibrationdataWindow = new UICalibrationdataWindow();
                }
                return this.mUICalibrationdataWindow;
            }
        }
        
        public UIOpenWindow UIOpenWindow
        {
            get
            {
                if ((this.mUIOpenWindow == null))
                {
                    this.mUIOpenWindow = new UIOpenWindow();
                }
                return this.mUIOpenWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private UISOPATStartupWindow mUISOPATStartupWindow;
        
        private UIProbeControlWindow mUIProbeControlWindow;
        
        private UIFocusmotorsetupWindow mUIFocusmotorsetupWindow;
        
        private UICalibrationdataWindow mUICalibrationdataWindow;
        
        private UIOpenWindow mUIOpenWindow;
        #endregion
    }
    
    /// <summary>
    /// An "RecordedMethod1" zu übergebende Parameter
    /// </summary>
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// "%ProgramW6432%\SOPAT GmbH\Dashboard\bin\startup\SOPAT_Startup.exe" starten
        /// </summary>
        public string UISOPATStartupWindowExePath = "C:\\Program Files\\SOPAT GmbH\\Dashboard\\bin\\startup\\SOPAT_Startup.exe";
        
        /// <summary>
        /// "%ProgramW6432%\SOPAT GmbH\Dashboard\bin\startup\SOPAT_Startup.exe" starten
        /// </summary>
        public string UISOPATStartupWindowAlternateExePath = "%ProgramW6432%\\SOPAT GmbH\\Dashboard\\bin\\startup\\SOPAT_Startup.exe";
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UISOPATStartupWindow : WinWindow
    {
        
        public UISOPATStartupWindow()
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.Name] = "SOPAT - Startup";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("SOPAT - Startup");
            #endregion
        }
        
        #region Properties
        public UIProbeControllerWindow UIProbeControllerWindow
        {
            get
            {
                if ((this.mUIProbeControllerWindow == null))
                {
                    this.mUIProbeControllerWindow = new UIProbeControllerWindow(this);
                }
                return this.mUIProbeControllerWindow;
            }
        }
        
        public UISOPATStartupTitleBar UISOPATStartupTitleBar
        {
            get
            {
                if ((this.mUISOPATStartupTitleBar == null))
                {
                    this.mUISOPATStartupTitleBar = new UISOPATStartupTitleBar(this);
                }
                return this.mUISOPATStartupTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIProbeControllerWindow mUIProbeControllerWindow;
        
        private UISOPATStartupTitleBar mUISOPATStartupTitleBar;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIProbeControllerWindow : WinWindow
    {
        
        public UIProbeControllerWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "buttonProbeViewer";
            this.WindowTitles.Add("SOPAT - Startup");
            #endregion
        }
        
        #region Properties
        public WinButton UIProbeControllerButton
        {
            get
            {
                if ((this.mUIProbeControllerButton == null))
                {
                    this.mUIProbeControllerButton = new WinButton(this);
                    #region Suchkriterien
                    this.mUIProbeControllerButton.SearchProperties[WinButton.PropertyNames.Name] = "Probe Controller";
                    this.mUIProbeControllerButton.WindowTitles.Add("SOPAT - Startup");
                    #endregion
                }
                return this.mUIProbeControllerButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIProbeControllerButton;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UISOPATStartupTitleBar : WinTitleBar
    {
        
        public UISOPATStartupTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.WindowTitles.Add("SOPAT - Startup");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Suchkriterien
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("SOPAT - Startup");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIProbeControlWindow : WinWindow
    {
        
        public UIProbeControlWindow()
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.Name] = "ProbeControl";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("ProbeControl");
            #endregion
        }
        
        #region Properties
        public UIToolStrip1Window UIToolStrip1Window
        {
            get
            {
                if ((this.mUIToolStrip1Window == null))
                {
                    this.mUIToolStrip1Window = new UIToolStrip1Window(this);
                }
                return this.mUIToolStrip1Window;
            }
        }
        
        public UITabControl1Window UITabControl1Window
        {
            get
            {
                if ((this.mUITabControl1Window == null))
                {
                    this.mUITabControl1Window = new UITabControl1Window(this);
                }
                return this.mUITabControl1Window;
            }
        }
        
        public UISetupWindow UISetupWindow
        {
            get
            {
                if ((this.mUISetupWindow == null))
                {
                    this.mUISetupWindow = new UISetupWindow(this);
                }
                return this.mUISetupWindow;
            }
        }
        
        public UIMenuStrip1MenuBar UIMenuStrip1MenuBar
        {
            get
            {
                if ((this.mUIMenuStrip1MenuBar == null))
                {
                    this.mUIMenuStrip1MenuBar = new UIMenuStrip1MenuBar(this);
                }
                return this.mUIMenuStrip1MenuBar;
            }
        }
        
        public UIProbeControlTitleBar UIProbeControlTitleBar
        {
            get
            {
                if ((this.mUIProbeControlTitleBar == null))
                {
                    this.mUIProbeControlTitleBar = new UIProbeControlTitleBar(this);
                }
                return this.mUIProbeControlTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIToolStrip1Window mUIToolStrip1Window;
        
        private UITabControl1Window mUITabControl1Window;
        
        private UISetupWindow mUISetupWindow;
        
        private UIMenuStrip1MenuBar mUIMenuStrip1MenuBar;
        
        private UIProbeControlTitleBar mUIProbeControlTitleBar;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIToolStrip1Window : WinWindow
    {
        
        public UIToolStrip1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "toolStrip1";
            this.WindowTitles.Add("ProbeControl");
            #endregion
        }
        
        #region Properties
        public WinButton UIToolStripButtonConneButton
        {
            get
            {
                if ((this.mUIToolStripButtonConneButton == null))
                {
                    this.mUIToolStripButtonConneButton = new WinButton(this);
                    #region Suchkriterien
                    this.mUIToolStripButtonConneButton.SearchProperties[WinButton.PropertyNames.Name] = "toolStripButtonConnect";
                    this.mUIToolStripButtonConneButton.WindowTitles.Add("ProbeControl");
                    #endregion
                }
                return this.mUIToolStripButtonConneButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIToolStripButtonConneButton;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UITabControl1Window : WinWindow
    {
        
        public UITabControl1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "tabControl1";
            this.WindowTitles.Add("ProbeControl");
            #endregion
        }
        
        #region Properties
        public UICurrentpositionTabList UICurrentpositionTabList
        {
            get
            {
                if ((this.mUICurrentpositionTabList == null))
                {
                    this.mUICurrentpositionTabList = new UICurrentpositionTabList(this);
                }
                return this.mUICurrentpositionTabList;
            }
        }
        #endregion
        
        #region Fields
        private UICurrentpositionTabList mUICurrentpositionTabList;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UICurrentpositionTabList : WinTabList
    {
        
        public UICurrentpositionTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinTabList.PropertyNames.Name] = "Current position";
            this.WindowTitles.Add("ProbeControl");
            #endregion
        }
        
        #region Properties
        public WinTabPage UIProbeControlTabPage
        {
            get
            {
                if ((this.mUIProbeControlTabPage == null))
                {
                    this.mUIProbeControlTabPage = new WinTabPage(this);
                    #region Suchkriterien
                    this.mUIProbeControlTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Probe Control";
                    this.mUIProbeControlTabPage.WindowTitles.Add("ProbeControl");
                    #endregion
                }
                return this.mUIProbeControlTabPage;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mUIProbeControlTabPage;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UISetupWindow : WinWindow
    {
        
        public UISetupWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnFocusSetup";
            this.WindowTitles.Add("ProbeControl");
            #endregion
        }
        
        #region Properties
        public WinButton UISetupButton
        {
            get
            {
                if ((this.mUISetupButton == null))
                {
                    this.mUISetupButton = new WinButton(this);
                    #region Suchkriterien
                    this.mUISetupButton.SearchProperties[WinButton.PropertyNames.Name] = "Setup";
                    this.mUISetupButton.WindowTitles.Add("ProbeControl");
                    #endregion
                }
                return this.mUISetupButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISetupButton;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIMenuStrip1MenuBar : WinMenuBar
    {
        
        public UIMenuStrip1MenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinMenu.PropertyNames.Name] = "menuStrip1";
            this.WindowTitles.Add("ProbeControl");
            #endregion
        }
        
        #region Properties
        public UIViewMenuItem UIViewMenuItem
        {
            get
            {
                if ((this.mUIViewMenuItem == null))
                {
                    this.mUIViewMenuItem = new UIViewMenuItem(this);
                }
                return this.mUIViewMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIViewMenuItem mUIViewMenuItem;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIViewMenuItem : WinMenuItem
    {
        
        public UIViewMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "View";
            this.WindowTitles.Add("ProbeControl");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UICalibrationdataMenuItem
        {
            get
            {
                if ((this.mUICalibrationdataMenuItem == null))
                {
                    this.mUICalibrationdataMenuItem = new WinMenuItem(this);
                    #region Suchkriterien
                    this.mUICalibrationdataMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Calibration data";
                    this.mUICalibrationdataMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUICalibrationdataMenuItem.WindowTitles.Add("ProbeControl");
                    #endregion
                }
                return this.mUICalibrationdataMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUICalibrationdataMenuItem;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIProbeControlTitleBar : WinTitleBar
    {
        
        public UIProbeControlTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.WindowTitles.Add("ProbeControl");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Suchkriterien
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("ProbeControl");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIFocusmotorsetupWindow : WinWindow
    {
        
        public UIFocusmotorsetupWindow()
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Focus motor setup";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Focus motor setup");
            #endregion
        }
        
        #region Properties
        public UISetupcalibrationdataWindow UISetupcalibrationdataWindow
        {
            get
            {
                if ((this.mUISetupcalibrationdataWindow == null))
                {
                    this.mUISetupcalibrationdataWindow = new UISetupcalibrationdataWindow(this);
                }
                return this.mUISetupcalibrationdataWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISetupcalibrationdataWindow mUISetupcalibrationdataWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UISetupcalibrationdataWindow : WinWindow
    {
        
        public UISetupcalibrationdataWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnSetupCalibrationData";
            this.WindowTitles.Add("Focus motor setup");
            #endregion
        }
        
        #region Properties
        public WinButton UISetupcalibrationdataButton
        {
            get
            {
                if ((this.mUISetupcalibrationdataButton == null))
                {
                    this.mUISetupcalibrationdataButton = new WinButton(this);
                    #region Suchkriterien
                    this.mUISetupcalibrationdataButton.SearchProperties[WinButton.PropertyNames.Name] = "Setup calibration data";
                    this.mUISetupcalibrationdataButton.WindowTitles.Add("Focus motor setup");
                    #endregion
                }
                return this.mUISetupcalibrationdataButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISetupcalibrationdataButton;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnOK";
            this.WindowTitles.Add("Focus motor setup");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Suchkriterien
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Focus motor setup");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UICalibrationdataWindow : WinWindow
    {
        
        public UICalibrationdataWindow()
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Calibration data";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Calibration data");
            #endregion
        }
        
        #region Properties
        public UILoadWindow UILoadWindow
        {
            get
            {
                if ((this.mUILoadWindow == null))
                {
                    this.mUILoadWindow = new UILoadWindow(this);
                }
                return this.mUILoadWindow;
            }
        }
        
        public UIOKWindow1 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow1(this);
                }
                return this.mUIOKWindow;
            }
        }
        
        public UICalibrationDataTitleBar UICalibrationDataTitleBar
        {
            get
            {
                if ((this.mUICalibrationDataTitleBar == null))
                {
                    this.mUICalibrationDataTitleBar = new UICalibrationDataTitleBar(this);
                }
                return this.mUICalibrationDataTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UILoadWindow mUILoadWindow;
        
        private UIOKWindow1 mUIOKWindow;
        
        private UICalibrationDataTitleBar mUICalibrationDataTitleBar;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UILoadWindow : WinWindow
    {
        
        public UILoadWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnLoad";
            this.WindowTitles.Add("Calibration data");
            #endregion
        }
        
        #region Properties
        public WinButton UILoadButton
        {
            get
            {
                if ((this.mUILoadButton == null))
                {
                    this.mUILoadButton = new WinButton(this);
                    #region Suchkriterien
                    this.mUILoadButton.SearchProperties[WinButton.PropertyNames.Name] = "Load";
                    this.mUILoadButton.WindowTitles.Add("Calibration data");
                    #endregion
                }
                return this.mUILoadButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUILoadButton;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIOKWindow1 : WinWindow
    {
        
        public UIOKWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnOK";
            this.WindowTitles.Add("Calibration data");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Suchkriterien
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Calibration data");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UICalibrationDataTitleBar : WinTitleBar
    {
        
        public UICalibrationDataTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.WindowTitles.Add("Calibration Data");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Suchkriterien
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Calibration Data");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIOpenWindow : WinWindow
    {
        
        public UIOpenWindow()
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Open";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UITreeViewWindow UITreeViewWindow
        {
            get
            {
                if ((this.mUITreeViewWindow == null))
                {
                    this.mUITreeViewWindow = new UITreeViewWindow(this);
                }
                return this.mUITreeViewWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItemWindow4 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow4(this);
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIOpenWindow1 UIOpenWindow1
        {
            get
            {
                if ((this.mUIOpenWindow1 == null))
                {
                    this.mUIOpenWindow1 = new UIOpenWindow1(this);
                }
                return this.mUIOpenWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UITreeViewWindow mUITreeViewWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIItemWindow3 mUIItemWindow3;
        
        private UIItemWindow4 mUIItemWindow4;
        
        private UIOpenWindow1 mUIOpenWindow1;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public UIItem20161115_NEW_BarListItem UIItem20161115_NEW_BarListItem
        {
            get
            {
                if ((this.mUIItem20161115_NEW_BarListItem == null))
                {
                    this.mUIItem20161115_NEW_BarListItem = new UIItem20161115_NEW_BarListItem(this);
                }
                return this.mUIItem20161115_NEW_BarListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIItem20161115_NEW_BarListItem mUIItem20161115_NEW_BarListItem;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIItem20161115_NEW_BarListItem : WinListItem
    {
        
        public UIItem20161115_NEW_BarListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinListItem.PropertyNames.Name] = "20161115_NEW_Barry_fix.json";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Suchkriterien
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Open");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UITreeViewWindow : WinWindow
    {
        
        public UITreeViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "100";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public UIQuickaccessTreeItem UIQuickaccessTreeItem
        {
            get
            {
                if ((this.mUIQuickaccessTreeItem == null))
                {
                    this.mUIQuickaccessTreeItem = new UIQuickaccessTreeItem(this);
                }
                return this.mUIQuickaccessTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIQuickaccessTreeItem mUIQuickaccessTreeItem;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIQuickaccessTreeItem : WinTreeItem
    {
        
        public UIQuickaccessTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Quick access";
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UISOPATGmbHpinnedTreeItem
        {
            get
            {
                if ((this.mUISOPATGmbHpinnedTreeItem == null))
                {
                    this.mUISOPATGmbHpinnedTreeItem = new WinTreeItem(this);
                    #region Suchkriterien
                    this.mUISOPATGmbHpinnedTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "SOPAT GmbH (pinned)";
                    this.mUISOPATGmbHpinnedTreeItem.SearchProperties["Value"] = "1";
                    this.mUISOPATGmbHpinnedTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUISOPATGmbHpinnedTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUISOPATGmbHpinnedTreeItem.WindowTitles.Add("Open");
                    #endregion
                }
                return this.mUISOPATGmbHpinnedTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUISOPATGmbHpinnedTreeItem;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public UIMonitoringProgramsListItem UIMonitoringProgramsListItem
        {
            get
            {
                if ((this.mUIMonitoringProgramsListItem == null))
                {
                    this.mUIMonitoringProgramsListItem = new UIMonitoringProgramsListItem(this);
                }
                return this.mUIMonitoringProgramsListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIMonitoringProgramsListItem mUIMonitoringProgramsListItem;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIMonitoringProgramsListItem : WinListItem
    {
        
        public UIMonitoringProgramsListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinListItem.PropertyNames.Name] = "monitoringPrograms";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Suchkriterien
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Open");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public UICamcontrolListItem UICamcontrolListItem
        {
            get
            {
                if ((this.mUICamcontrolListItem == null))
                {
                    this.mUICamcontrolListItem = new UICamcontrolListItem(this);
                }
                return this.mUICamcontrolListItem;
            }
        }
        #endregion
        
        #region Fields
        private UICamcontrolListItem mUICamcontrolListItem;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UICamcontrolListItem : WinListItem
    {
        
        public UICamcontrolListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinListItem.PropertyNames.Name] = "camcontrol";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Suchkriterien
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Open");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public UICalibrationListItem UICalibrationListItem
        {
            get
            {
                if ((this.mUICalibrationListItem == null))
                {
                    this.mUICalibrationListItem = new UICalibrationListItem(this);
                }
                return this.mUICalibrationListItem;
            }
        }
        #endregion
        
        #region Fields
        private UICalibrationListItem mUICalibrationListItem;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UICalibrationListItem : WinListItem
    {
        
        public UICalibrationListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinListItem.PropertyNames.Name] = "calibration";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Suchkriterien
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Open");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public UIItem20161115_NEW_BarListItem1 UIItem20161115_NEW_BarListItem
        {
            get
            {
                if ((this.mUIItem20161115_NEW_BarListItem == null))
                {
                    this.mUIItem20161115_NEW_BarListItem = new UIItem20161115_NEW_BarListItem1(this);
                }
                return this.mUIItem20161115_NEW_BarListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIItem20161115_NEW_BarListItem1 mUIItem20161115_NEW_BarListItem;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIItem20161115_NEW_BarListItem1 : WinListItem
    {
        
        public UIItem20161115_NEW_BarListItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinListItem.PropertyNames.Name] = "20161115_NEW_Barry_fix.json";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Suchkriterien
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Open");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Test-Generator für codierte UI", "11.0.50727.1")]
    public class UIOpenWindow1 : WinWindow
    {
        
        public UIOpenWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public WinButton UIOpenButton
        {
            get
            {
                if ((this.mUIOpenButton == null))
                {
                    this.mUIOpenButton = new WinButton(this);
                    #region Suchkriterien
                    this.mUIOpenButton.SearchProperties[WinButton.PropertyNames.Name] = "Open";
                    this.mUIOpenButton.WindowTitles.Add("Open");
                    #endregion
                }
                return this.mUIOpenButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOpenButton;
        #endregion
    }
}
